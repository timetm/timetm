
{% block mainContent -%}
{# <div class="listContainer">#}

<h1>add an event</h1>

<div class="form_error"></div>

<form id="event_save" action="{{ path('event_create') }}" method="POST" {{ form_enctype(form) }} class=".form_datetime"">

<div id="form_body">
	<table class="form records_list hcentered">
		<tr>
			<td>
				{{ form_errors(form.title) }}
				{{ form_label(form.title) }}
				{{ form_widget(form.title, { 'attr': { 'placeholder': 'today'|trans} } ) }}
			</td>
		</tr>
		<tr>
			<td>
				{{ form_errors(form.client) }}
				{{ form_label(form.client) }}
				{{ form_widget(form.client) }}
			</td>
		</tr>
		<tr>
			<td>
				{{ form_widget(form.startdate) }} 
				{{ form_widget(form.enddate) }} {{ form_widget(form.fullday) }}
			</td>
		</tr>
		<tr>
			<td>
				{{ form_errors(form.place) }}
				{{ form_label(form.place) }}
				{{ form_widget(form.place) }}
			</td>
		</tr>
		<tr>
			<td>
				{{ form_errors(form.description) }}
				{{ form_label(form.description) }}
				{{ form_widget(form.description) }}
			</td>
		</tr>
		<tr>
			<td>
				{{ form_widget(form.agenda) }}
			</td>
		</tr>

		<tr>
			<td>
				{{ form_label(form.participants) }}
				{{ form_widget(form.participants) }}
			</td>
		</tr>
		<tr>
			<td>
				{{ form_widget(form.contacts) }}
			</td>
		</tr>
		<tr>
			<td class="align-center">
				{{ form_widget(form.save, { 'label' : 'action.save'}) }}
				<a class="button" href="{{ path('event') }}">
            		{{ 'action.back.list'|trans }}
       			</a>
       			
			</td>
		</tr>
{# 		{{ form_rest(form) }}#}
	</table>

{{ form_widget(form._token) }}
</form>
{# </div>#}
</div>
<script type="text/javascript">

$(function() {

    $( "#timetm_eventbundle_event_contacts" ).on('change focusout', function () {

        // get the selected Contact
        var newContact = $( "#timetm_eventbundle_event_contacts option:selected" ).text();

        // get the content of participants field
		var contacts = $( "#timetm_eventbundle_event_participants").val();

        // if name is already in field do nothing
		var regexp = new RegExp(newContact);
		if ( contacts.match(regexp) ) {
			return;
		}

		if (contacts) {
			contacts += ', '; 
		}
		contacts += newContact;
       	$( "#timetm_eventbundle_event_participants").val(contacts);
    });

    $("#timetm_eventbundle_event_startdate").datetimepicker({
        
        format:'d/m/Y H:i',
        
        onChangeDateTime:function(dp,$input){

            // get field value
            var dateInput = $input.val();

            // reverse date ( d/m/y -> y/m/d )
			var buffer = dateInput.split(' ');

			var date = buffer[0];
			var time = buffer[1];

			buffer = date.split('/');
			buffer.reverse(); 
			date = buffer.join('/');

			dateInput = date + ' ' + time;

            // create date object from date input
			var startDate = new Date(dateInput);

			// create new date object
			var dateOutput = new Date();

			// set new date at now +1h
			dateOutput.setTime(startDate.getTime() + (60*60*1000));

			// formatting
			var day = toString(dateOutput.getDate());
			
			var month = dateOutput.getMonth();

			month += 1;

			if ( month == 12 ) {
				month = 0;
			}

			month = toString(month);
			
			var hours = toString(dateOutput.getHours());

			var mins = toString(dateOutput.getMinutes());
			
			dateOutputString = day + '/' + month + '/' + dateOutput.getFullYear() + ' ' + hours + ':' + mins;
			
          $("#timetm_eventbundle_event_enddate").val(dateOutputString);
        }
      });


    $("#timetm_eventbundle_event_enddate").datetimepicker({
        format:'d/m/Y H:i',
      });

    
})

function toString(param) {

	return param < 10 ? param = '0' + param: param;
}

</script>
{% endblock %}
